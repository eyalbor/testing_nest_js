var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AccountController.html",[0,1.083,1,1.858]],["body/controllers/AccountController.html",[0,1.575,1,2.702,2,1.469,3,0.434,4,0.373,5,0.373,6,2.73,7,0.637,8,1.575,9,4.359,10,3.316,11,1.378,12,1.634,13,0.038,14,0.883,15,3.316,16,1.326,17,1.083,18,0.883,19,1.198,20,4.869,21,1.198,22,0.497,23,3.316,24,0.497,25,2.344,26,3.316,27,0.434,28,0.209,29,3.316,30,1.326,31,0.028,32,0.028]],["title/controllers/AdminController.html",[0,1.083,33,1.858]],["body/controllers/AdminController.html",[0,1.632,2,1.551,3,0.458,4,0.394,5,0.394,7,1.05,8,1.632,11,1.203,12,1.724,13,0.038,14,0.933,21,1.265,22,0.525,24,0.525,25,2.474,27,0.458,28,0.221,30,1.4,31,0.029,32,0.029,33,2.799,34,2.882,35,3.5,36,3.5,37,3.5,38,3.5]],["title/controllers/AppController.html",[0,1.083,39,2.119]],["body/controllers/AppController.html",[0,1.54,2,1.419,3,0.419,4,0.361,5,0.361,7,0.615,8,1.54,11,1.135,12,1.578,13,0.039,14,0.853,21,1.158,22,0.639,24,0.481,27,0.419,28,0.202,30,1.281,31,0.028,32,0.028,39,3.011,40,2.637,41,4.2,42,3.203,43,3.203,44,3.203,45,3.203,46,2.637,47,3.203,48,3.203,49,2.967,50,3.203,51,1.986,52,1.986,53,3.203]],["title/modules/AppModule.html",[54,1.083,55,1.858]],["body/modules/AppModule.html",[1,2.743,2,1.702,3,0.36,4,0.31,5,0.31,13,0.039,22,0.804,24,0.413,27,0.36,28,0.174,31,0.025,32,0.025,33,2.743,54,1.388,55,3.235,56,1.219,57,1.702,58,2.265,59,2.265,60,2.873,61,2.114,62,1.515,63,1.515,64,2.751,65,2.436,66,3.162,67,2.751,68,2.751,69,2.751,70,2.751,71,3.841,72,1.945,73,2.381,74,2.751,75,1.706,76,1.945,77,2.751]],["title/injectables/AppService.html",[49,1.858,78,0.799]],["body/injectables/AppService.html",[3,0.472,4,0.407,5,0.407,7,0.694,8,1.665,11,1.227,13,0.038,14,0.962,21,1.305,22,0.542,24,0.542,27,0.472,28,0.228,30,1.444,31,0.03,32,0.03,41,4.399,49,2.856,78,1.227,79,1.779,80,2.973,81,3.612,82,3.612,83,3.612]],["title/interfaces/Cat.html",[84,1.65,85,1.65]],["body/interfaces/Cat.html",[3,0.455,4,0.392,5,0.392,7,0.668,11,1.489,13,0.037,17,1.721,18,1.328,27,0.455,31,0.029,32,0.029,84,1.915,85,2.476,86,3.479,87,2.864,88,2.216,89,4.337,90,4.337,91,3.523]],["title/controllers/CatsController.html",[0,1.083,65,1.65]],["body/controllers/CatsController.html",[0,0.442,2,0.542,3,0.16,4,0.138,5,0.138,7,0.235,8,0.742,11,1.255,12,2.055,13,0.039,14,1.111,16,1.496,17,1.363,18,0.921,19,1.352,21,1.567,22,0.626,24,0.184,27,0.16,28,0.129,30,1.496,31,0.013,32,0.013,46,1.007,51,0.758,54,0.442,65,1.13,85,0.673,92,1.007,93,1.223,94,1.007,95,4.245,96,1.689,97,2.182,98,1.689,99,3.103,100,1.689,101,2.052,102,3.103,103,2.052,104,1.223,105,2.319,106,2.052,107,2.052,108,1.223,109,1.223,110,2.182,111,1.223,112,1.223,113,1.223,114,2.052,115,1.223,116,2.319,117,1.223,118,2.052,119,2.052,120,1.223,121,1.223,122,1.223,123,1.643,124,1.223,125,2.052,126,1.223,127,1.223,128,2.052,129,1.223,130,2.554,131,2.052,132,2.052,133,1.223,134,1.223,135,2.052,136,1.223,137,1.223,138,2.052,139,1.007,140,1.223,141,1.007,142,1.223,143,1.223,144,1.223,145,1.223,146,1.643,147,1.223,148,2.052,149,1.223,150,0.865,151,1.223,152,1.223,153,1.011,154,1.007,155,1.223,156,0.865,157,1.223,158,1.223,159,0.758,160,1.223,161,0.673,162,1.223,163,1.223,164,1.223,165,1.223,166,1.223,167,1.223,168,1.223,169,1.223,170,1.223,171,1.223,172,1.223,173,1.223,174,1.223,175,1.223,176,1.223,177,1.223,178,1.223,179,1.223,180,1.223,181,1.223,182,1.007,183,1.223,184,1.223,185,1.223,186,1.223,187,1.223,188,1.689,189,1.272,190,1.223,191,1.223,192,1.007,193,1.223,194,0.542,195,1.223,196,2.052,197,1.223,198,1.223,199,1.223,200,1.223,201,1.007,202,1.223,203,1.223,204,1.223,205,1.223,206,1.223,207,1.223]],["title/modules/CatsModule.html",[54,1.083,60,1.65]],["body/modules/CatsModule.html",[2,1.787,3,0.386,4,0.332,5,0.332,13,0.038,22,0.689,24,0.443,27,0.386,28,0.186,31,0.026,32,0.026,54,1.457,56,1.787,57,1.787,60,3.005,61,2.22,62,1.625,63,1.625,65,2.528,75,2.5,153,2.877,154,2.431,208,2.431,209,2.431,210,2.431,211,2.952,212,2.85,213,2.952,214,2.431,215,2.952,216,2.952,217,2.952,218,2.952]],["title/injectables/CatsService.html",[78,0.799,153,1.477]],["body/injectables/CatsService.html",[3,0.282,4,0.243,5,0.243,7,0.618,8,1.163,11,1.278,13,0.039,14,1.219,16,1.541,17,1.625,18,1.139,19,1.392,21,1.545,22,0.483,24,0.323,27,0.282,28,0.136,30,1.541,31,0.021,32,0.021,52,2.388,78,0.858,79,1.061,85,3.044,88,1.586,94,3.172,96,2.65,97,2.65,98,3.519,100,2.65,153,1.586,219,1.774,220,2.723,221,3.219,222,2.155,223,1.774,224,3.219,225,2.155,226,2.155,227,3.219,228,2.155,229,1.774,230,1.523,231,2.155,232,2.155,233,2.155,234,2.155,235,2.155,236,3.219,237,1.336,238,2.155,239,2.155,240,2.155]],["title/modules/CommonModule.html",[54,1.083,241,1.65]],["body/modules/CommonModule.html",[3,0.374,4,0.322,5,0.322,13,0.038,22,0.592,24,0.43,27,0.374,28,0.249,31,0.026,32,0.026,51,1.775,52,1.775,54,1.761,56,1.269,57,1.75,61,2.173,62,1.576,63,1.576,75,3.02,194,1.269,212,2.791,241,3.2,242,2.357,243,2.357,244,2.357,245,3.037,246,2.863,247,2.863,248,2.357,249,2.863,250,2.357,251,2.863,252,2.863,253,2.357,254,2.357,255,2.357,256,2.357,257,2.357]],["title/injectables/CommonService.html",[78,0.799,245,1.65]],["body/injectables/CommonService.html",[3,0.538,4,0.463,5,0.463,13,0.037,22,0.617,24,0.617,27,0.538,28,0.259,31,0.032,32,0.032,78,1.33,79,2.025,245,2.748,258,3.384]],["title/modules/CoreModule.html",[54,1.083,259,1.858]],["body/modules/CoreModule.html",[3,0.36,4,0.31,5,0.31,13,0.038,22,0.664,24,0.413,27,0.502,28,0.174,31,0.025,32,0.025,54,1.599,56,1.702,57,1.702,61,2.114,62,1.515,63,2.114,66,3.162,75,2.381,76,1.945,194,1.219,212,2.715,214,2.265,241,3.156,250,2.265,253,2.265,254,2.265,255,2.265,256,2.265,257,2.265,259,3.32,260,2.265,261,2.751,262,2.751,263,2.751,264,3.841,265,2.751,266,2.751,267,2.751,268,2.751,269,2.751,270,2.751,271,2.751,272,2.751,273,2.751,274,2.751]],["title/classes/CreateCatDto.html",[28,0.189,105,1.858]],["body/classes/CreateCatDto.html",[3,0.382,4,0.329,5,0.329,7,0.561,11,1.309,12,2.251,13,0.038,14,1.217,17,1.493,18,1.217,22,0.601,27,0.382,28,0.253,31,0.026,32,0.026,88,1.973,89,3.761,90,3.761,91,2.83,105,2.482,156,2.065,194,1.295,275,4.045,276,2.406,277,2.922,278,2.922,279,4.004,280,2.922,281,2.922,282,4.914,283,4.004,284,4.568,285,2.065]],["title/classes/ForbiddenException.html",[28,0.189,146,1.858]],["body/classes/ForbiddenException.html",[3,0.458,4,0.394,5,0.394,11,1.203,13,0.038,14,0.933,16,1.4,17,1.144,18,0.933,19,1.265,22,0.525,24,0.525,27,0.458,28,0.221,31,0.029,32,0.029,141,2.882,146,2.799,194,1.551,286,2.882,287,4.515,288,4.115,289,2.882,290,4.515,291,3.5,292,3.5,293,3.5,294,3.5,295,3.5]],["title/classes/HttpExceptionFilter.html",[28,0.189,123,1.858]],["body/classes/HttpExceptionFilter.html",[3,0.335,4,0.289,5,0.289,7,0.492,8,1.321,13,0.038,14,0.683,16,1.025,17,0.838,18,0.683,19,0.927,21,0.927,22,0.548,24,0.385,25,3.281,27,0.335,28,0.162,31,0.024,32,0.024,76,1.813,84,1.412,116,2.266,123,2.266,150,1.813,189,1.59,192,2.111,194,1.137,223,2.111,237,2.878,288,3.821,296,3.009,297,2.111,298,2.584,299,4.642,300,4.259,301,4.259,302,4.907,303,2.565,304,3.655,305,3.009,306,2.565,307,2.565,308,2.565,309,2.111,310,2.565,311,2.565,312,2.565,313,2.565,314,2.565,315,3.655,316,2.565,317,2.565,318,2.565,319,2.565,320,2.565,321,2.565,322,2.565]],["title/injectables/HttpService.html",[78,0.799,323,2.119]],["body/injectables/HttpService.html",[3,0.449,4,0.387,5,0.387,7,0.66,12,1.693,13,0.037,14,0.916,18,0.916,19,1.242,22,0.516,24,0.516,27,0.449,28,0.217,31,0.029,32,0.029,52,3.071,78,1.189,79,1.693,88,2.198,220,3.502,248,2.829,309,3.673,323,3.154,324,3.673,325,2.829,326,4.954,327,4.462,328,3.436]],["title/guards/RolesGuard.html",[159,1.858,329,2.119]],["body/guards/RolesGuard.html",[3,0.339,4,0.291,5,0.291,7,0.497,8,1.329,11,0.69,13,0.039,14,0.98,16,1.471,17,1.202,18,0.98,19,1.329,21,0.935,22,0.552,24,0.388,27,0.339,28,0.163,30,1.711,31,0.024,32,0.024,51,1.604,72,1.829,78,0.98,116,1.604,159,2.28,161,2.025,237,2.653,289,2.131,298,1.829,330,2.588,331,1.829,332,4.661,333,2.588,334,5.116,335,2.588,336,3.679,337,4.661,338,2.588,339,2.588,340,3.029,341,1.829,342,3.029,343,2.131,344,2.588,345,2.588,346,2.588,347,2.588,348,2.588,349,2.588,350,2.588,351,2.588,352,2.588]],["title/injectables/ValidationPipe.html",[73,1.858,78,0.799]],["body/injectables/ValidationPipe.html",[3,0.3,4,0.258,5,0.258,7,0.441,8,1.219,11,0.611,13,0.039,14,0.898,16,1.348,17,1.102,18,0.898,19,1.219,21,1.219,22,0.6,24,0.344,27,0.3,28,0.252,30,1.599,31,0.022,32,0.022,73,2.09,78,0.898,79,1.13,91,1.622,95,3.291,110,1.889,188,1.889,189,1.422,220,2.826,230,3.115,237,2.478,285,1.622,298,1.622,340,3.291,341,3.115,353,1.889,354,3.372,355,3.372,356,3.372,357,2.294,358,3.998,359,3.372,360,2.294,361,4.407,362,2.294,363,2.294,364,3.372,365,2.294,366,2.294,367,1.889,368,2.294,369,3.372,370,2.294,371,2.294,372,2.294,373,2.294,374,2.294,375,1.889,376,2.294,377,2.294,378,2.294,379,2.294,380,2.294]],["title/coverage.html",[381,2.88]],["body/coverage.html",[0,1.605,1,1.446,5,0.263,6,1.92,13,0.038,18,0.621,28,0.255,31,0.022,32,0.022,33,1.446,34,1.92,39,1.648,40,1.92,49,1.446,65,1.284,73,1.446,78,1.259,80,1.92,84,1.284,85,1.284,87,1.92,92,1.92,105,1.446,123,1.446,146,1.446,153,1.149,159,1.446,161,1.284,189,1.446,219,1.92,245,1.284,258,1.92,275,1.92,276,1.92,286,1.92,296,1.92,297,1.92,323,1.648,324,1.92,325,1.92,329,1.648,331,2.412,341,2.853,353,1.92,375,4.777,381,1.648,382,2.332,383,2.332,384,2.332,385,5.101,386,1.92,387,1.92,388,2.332,389,4.727,390,3.413,391,1.92,392,1.92,393,1.92,394,1.92,395,1.92,396,2.332,397,2.332,398,3.413,399,2.332,400,2.332]],["title/dependencies.html",[57,1.596,401,2.068]],["body/dependencies.html",[13,0.039,24,0.525,28,0.285,31,0.029,32,0.029,57,1.551,72,2.474,150,3.191,156,2.474,285,2.474,367,2.882,402,4.998,403,3.5,404,3.5,405,3.5,406,3.5,407,3.5,408,3.5,409,3.5,410,3.5,411,3.5,412,3.5,413,3.5,414,3.5,415,3.5,416,3.5,417,3.5,418,3.5]],["title/miscellaneous/functions.html",[419,1.557,420,2.965]],["body/miscellaneous/functions.html",[7,0.664,13,0.034,16,1.791,17,1.464,18,1.193,19,1.619,31,0.029,32,0.029,116,2.777,139,2.846,161,1.903,305,3.688,331,2.444,342,2.846,343,3.688,391,3.688,392,2.846,393,3.688,394,2.846,395,4.091,419,2.143,420,2.846,421,3.457,422,3.457,423,3.457,424,3.457,425,4.479,426,4.479,427,4.479]],["title/index.html",[7,0.482,428,2.512,429,2.512]],["body/index.html",[4,0.298,13,0.038,31,0.024,32,0.024,201,3.569,381,1.872,430,2.649,431,2.649,432,3.739,433,2.649,434,2.649,435,2.649,436,2.649,437,2.649,438,2.649,439,2.18,440,2.649,441,2.649,442,2.649,443,2.649,444,5.298,445,2.649,446,2.649,447,2.649,448,5.155,449,2.649,450,2.649,451,3.739,452,2.649,453,2.649,454,2.649,455,2.649,456,3.739,457,3.739,458,2.649,459,2.649,460,2.649,461,3.739,462,3.739,463,2.649,464,2.649,465,2.649,466,2.649,467,2.649,468,2.18,469,2.649,470,2.649,471,2.649,472,2.649,473,2.649,474,2.649,475,2.649,476,2.649,477,2.649,478,2.649,479,2.18,480,2.649,481,2.649,482,2.649,483,2.649,484,2.649,485,2.649,486,2.18]],["title/modules.html",[56,1.806]],["body/modules.html",[13,0.032,31,0.032,32,0.032,55,2.459,56,1.758,60,2.183,241,2.183,259,2.459,468,4.549,487,5.525,488,5.525,489,5.525]],["title/overview.html",[490,3.355]],["body/overview.html",[2,1.295,13,0.036,31,0.026,32,0.026,55,3.046,56,1.295,57,1.774,58,2.406,59,2.406,60,2.927,61,2.204,62,1.608,63,1.608,79,1.44,84,1.608,153,2.682,182,2.406,194,1.295,208,2.406,209,2.406,210,2.406,241,3.188,242,2.406,243,2.406,244,2.406,245,2.515,259,3.191,260,2.406,329,2.065,490,2.406,491,4.004,492,2.922,493,4.004]],["title/properties.html",[88,1.774,401,2.068]],["body/properties.html",[13,0.038,31,0.033,32,0.033,88,2.055,130,3.434,439,3.434,479,3.434,486,3.434,494,4.171,495,4.171,496,4.171,497,4.171,498,4.171]],["title/miscellaneous/variables.html",[419,1.557,499,2.965]],["body/miscellaneous/variables.html",[7,0.784,11,1.087,13,0.036,31,0.032,32,0.032,161,3.072,229,3.359,230,2.884,386,3.359,387,4.092,419,2.529,499,3.359,500,4.08,501,4.08]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":493,"title":{},"body":{"overview.html":{}}}],["1)[0",{"_index":240,"title":{},"body":{"injectables/CatsService.html":{}}}],["1.0.0",{"_index":494,"title":{},"body":{"properties.html":{}}}],["3",{"_index":492,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["302",{"_index":128,"title":{},"body":{"controllers/CatsController.html":{}}}],["4",{"_index":491,"title":{},"body":{"overview.html":{}}}],["4.3.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":182,"title":{},"body":{"controllers/CatsController.html":{},"overview.html":{}}}],["5.0.2",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["7.5.4",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["account",{"_index":20,"title":{},"body":{"controllers/AccountController.html":{}}}],["account.example.com",{"_index":26,"title":{},"body":{"controllers/AccountController.html":{}}}],["accountcontroller",{"_index":1,"title":{"controllers/AccountController.html":{}},"body":{"controllers/AccountController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["action",{"_index":178,"title":{},"body":{"controllers/CatsController.html":{}}}],["admin",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{}}}],["admin.example.com",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{}}}],["admincontroller",{"_index":33,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["age",{"_index":89,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{}}}],["amazing",{"_index":469,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":282,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["apiproperty()@isint",{"_index":277,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["apiproperty()@isstring",{"_index":279,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["apitags",{"_index":155,"title":{},"body":{"controllers/CatsController.html":{}}}],["apitags('cats",{"_index":164,"title":{},"body":{"controllers/CatsController.html":{}}}],["app",{"_index":446,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["app_pipe",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":39,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["application",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["applications",{"_index":438,"title":{},"body":{"index.html":{}}}],["applying",{"_index":191,"title":{},"body":{"controllers/CatsController.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":49,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["argumentmetadata",{"_index":361,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":302,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":379,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":95,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ValidationPipe.html":{}}}],["author",{"_index":479,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":268,"title":{},"body":{"modules/CoreModule.html":{}}}],["await",{"_index":372,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["backers",{"_index":470,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":363,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception(`validation",{"_index":376,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["between",{"_index":217,"title":{},"body":{"modules/CatsModule.html":{}}}],["body",{"_index":145,"title":{},"body":{"controllers/CatsController.html":{}}}],["boolean",{"_index":340,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borovsky",{"_index":498,"title":{},"body":{"properties.html":{}}}],["box",{"_index":270,"title":{},"body":{"modules/CoreModule.html":{}}}],["breed",{"_index":90,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{}}}],["browse",{"_index":489,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":487,"title":{},"body":{"modules.html":{}}}],["building",{"_index":433,"title":{},"body":{"index.html":{}}}],["cache",{"_index":168,"title":{},"body":{"controllers/CatsController.html":{}}}],["cache')@httpcode(httpstatus.no_content)@post",{"_index":108,"title":{},"body":{"controllers/CatsController.html":{}}}],["canactivate",{"_index":332,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":336,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cat",{"_index":85,"title":{"interfaces/Cat.html":{}},"body":{"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"coverage.html":{}}}],["cat.dto",{"_index":152,"title":{},"body":{"controllers/CatsController.html":{}}}],["cat.dto.ts",{"_index":276,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["cat.dto.ts:11",{"_index":278,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:15",{"_index":280,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.dto.ts:7",{"_index":281,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["cat.name",{"_index":236,"title":{},"body":{"injectables/CatsService.html":{}}}],["catch",{"_index":300,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":301,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":310,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cats",{"_index":94,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["cats.controller",{"_index":213,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":154,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["catscontroller",{"_index":65,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catservice",{"_index":167,"title":{},"body":{"controllers/CatsController.html":{}}}],["catsmodule",{"_index":60,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":153,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["circular",{"_index":256,"title":{},"body":{"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["class",{"_index":28,"title":{"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":194,"title":{},"body":{"controllers/CatsController.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":208,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":210,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_providers",{"_index":209,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":242,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":243,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":244,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":260,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":262,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_imports",{"_index":261,"title":{},"body":{"modules/CoreModule.html":{}}}],["common.service",{"_index":247,"title":{},"body":{"modules/CommonModule.html":{}}}],["common/common.module",{"_index":265,"title":{},"body":{"modules/CoreModule.html":{}}}],["common/decorators/metadata/user",{"_index":162,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/exceptions/http",{"_index":157,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/guards/roles.guard",{"_index":160,"title":{},"body":{"controllers/CatsController.html":{}}}],["common/pipes/validation.pipe",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":241,"title":{"modules/CommonModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["commonservice",{"_index":245,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["configuration",{"_index":251,"title":{},"body":{"modules/CommonModule.html":{}}}],["connections",{"_index":273,"title":{},"body":{"modules/CoreModule.html":{}}}],["console.log(params.id",{"_index":187,"title":{},"body":{"controllers/CatsController.html":{}}}],["const",{"_index":237,"title":{},"body":{"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":289,"title":{},"body":{"classes/ForbiddenException.html":{},"guards/RolesGuard.html":{}}}],["constructor(message",{"_index":290,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["constructor(private",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{},"modules/CommonModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(reflector",{"_index":333,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context",{"_index":339,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":347,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":349,"title":{},"body":{"guards/RolesGuard.html":{}}}],["control",{"_index":107,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/CatsController.html":{}},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/CatsController.html":{},"coverage.html":{}}}],["controller's",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["controller('cats",{"_index":165,"title":{},"body":{"controllers/CatsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"overview.html":{}}}],["coremodule",{"_index":259,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":381,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":96,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["create(@body",{"_index":170,"title":{},"body":{"controllers/CatsController.html":{}}}],["create(cat",{"_index":221,"title":{},"body":{"injectables/CatsService.html":{}}}],["create(createcatdto",{"_index":104,"title":{},"body":{"controllers/CatsController.html":{}}}],["createcatdto",{"_index":105,"title":{"classes/CreateCatDto.html":{}},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"coverage.html":{}}}],["ctx",{"_index":311,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":314,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":313,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["database",{"_index":272,"title":{},"body":{"modules/CoreModule.html":{}}}],["date().toisostring",{"_index":320,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"injectables/HttpService.html":{}}}],["default",{"_index":229,"title":{},"body":{"injectables/CatsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":97,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["delete('delete/:id",{"_index":172,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete('delete/:id')@roles('admin",{"_index":112,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete(@param('id",{"_index":174,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete(id",{"_index":111,"title":{},"body":{"controllers/CatsController.html":{}}}],["delete(name",{"_index":224,"title":{},"body":{"injectables/CatsService.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":257,"title":{},"body":{"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["description",{"_index":439,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":447,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":151,"title":{},"body":{"controllers/CatsController.html":{}}}],["due",{"_index":255,"title":{},"body":{"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["e.g",{"_index":250,"title":{},"body":{"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["e2e",{"_index":458,"title":{},"body":{"index.html":{}}}],["easily",{"_index":202,"title":{},"body":{"controllers/CatsController.html":{}}}],["efficient",{"_index":434,"title":{},"body":{"index.html":{}}}],["entire",{"_index":205,"title":{},"body":{"controllers/CatsController.html":{}}}],["errors",{"_index":371,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":374,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["etc",{"_index":274,"title":{},"body":{"modules/CoreModule.html":{}}}],["everywhere",{"_index":269,"title":{},"body":{"modules/CoreModule.html":{}}}],["exception",{"_index":304,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":158,"title":{},"body":{"controllers/CatsController.html":{}}}],["exception.filter.ts",{"_index":297,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":303,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":316,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":299,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":337,"title":{},"body":{"guards/RolesGuard.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":212,"title":{},"body":{"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["express",{"_index":150,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":287,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["eyal",{"_index":497,"title":{},"body":{"properties.html":{}}}],["failed",{"_index":377,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["filters",{"_index":192,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{}}}],["findall",{"_index":98,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findall(@req",{"_index":176,"title":{},"body":{"controllers/CatsController.html":{}}}],["findall(request",{"_index":115,"title":{},"body":{"controllers/CatsController.html":{}}}],["findcat",{"_index":99,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone",{"_index":100,"title":{},"body":{"controllers/CatsController.html":{},"injectables/CatsService.html":{}}}],["findone(@param",{"_index":186,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(name",{"_index":227,"title":{},"body":{"injectables/CatsService.html":{}}}],["findone(params",{"_index":121,"title":{},"body":{"controllers/CatsController.html":{}}}],["forbidden",{"_index":293,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["forbiddenexception",{"_index":146,"title":{"classes/ForbiddenException.html":{}},"body":{"controllers/CatsController.html":{},"classes/ForbiddenException.html":{},"coverage.html":{}}}],["framework",{"_index":432,"title":{},"body":{"index.html":{}}}],["function",{"_index":341,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["functions",{"_index":420,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generic",{"_index":307,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["get(':id",{"_index":184,"title":{},"body":{"controllers/CatsController.html":{}}}],["get(':id')@usefilters(new",{"_index":122,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('cat_",{"_index":119,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs",{"_index":179,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('docs')@redirect('https://docs.nestjs.com",{"_index":127,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('exp",{"_index":132,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('pipe/:name",{"_index":135,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs",{"_index":101,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(@query('version",{"_index":181,"title":{},"body":{"controllers/CatsController.html":{}}}],["getdocs(version",{"_index":126,"title":{},"body":{"controllers/CatsController.html":{}}}],["gethello",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo",{"_index":9,"title":{},"body":{"controllers/AccountController.html":{}}}],["getinfo(@hostparam('account",{"_index":29,"title":{},"body":{"controllers/AccountController.html":{}}}],["getinfo(account",{"_index":10,"title":{},"body":{"controllers/AccountController.html":{}}}],["getting",{"_index":428,"title":{"index.html":{}},"body":{}}],["global",{"_index":264,"title":{},"body":{"modules/CoreModule.html":{}}}],["grow",{"_index":465,"title":{},"body":{"index.html":{}}}],["guard",{"_index":329,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":330,"title":{},"body":{"guards/RolesGuard.html":{}}}],["header",{"_index":140,"title":{},"body":{"controllers/CatsController.html":{}}}],["header('cache",{"_index":106,"title":{},"body":{"controllers/CatsController.html":{}}}],["hello",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["helpers",{"_index":271,"title":{},"body":{"modules/CoreModule.html":{}}}],["here",{"_index":476,"title":{},"body":{"index.html":{}}}],["host",{"_index":25,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":312,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["hostparam",{"_index":23,"title":{},"body":{"controllers/AccountController.html":{}}}],["httpclient",{"_index":326,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpcode",{"_index":137,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":169,"title":{},"body":{"controllers/CatsController.html":{}}}],["httpexception",{"_index":288,"title":{},"body":{"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":123,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://docs.nestjs.com/v5",{"_index":183,"title":{},"body":{"controllers/CatsController.html":{}}}],["https://nestjs.com",{"_index":483,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":323,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["httpstatus",{"_index":141,"title":{},"body":{"controllers/CatsController.html":{},"classes/ForbiddenException.html":{}}}],["httpstatus.forbidden",{"_index":295,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["id",{"_index":114,"title":{},"body":{"controllers/CatsController.html":{}}}],["identifier",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":306,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["implements",{"_index":298,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["inject",{"_index":248,"title":{},"body":{"modules/CommonModule.html":{},"injectables/HttpService.html":{}}}],["inject('http_options",{"_index":327,"title":{},"body":{"injectables/HttpService.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injected",{"_index":254,"title":{},"body":{"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["installation",{"_index":443,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":445,"title":{},"body":{"index.html":{}}}],["instance",{"_index":216,"title":{},"body":{"modules/CatsModule.html":{}}}],["instances",{"_index":196,"title":{},"body":{"controllers/CatsController.html":{}}}],["instead",{"_index":195,"title":{},"body":{"controllers/CatsController.html":{}}}],["interface",{"_index":84,"title":{"interfaces/Cat.html":{}},"body":{"interfaces/Cat.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":86,"title":{},"body":{"interfaces/Cat.html":{}}}],["interfaces/cat.interface",{"_index":232,"title":{},"body":{"injectables/CatsService.html":{}}}],["isint",{"_index":283,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["isstring",{"_index":284,"title":{},"body":{"classes/CreateCatDto.html":{}}}],["join",{"_index":472,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":480,"title":{},"body":{"index.html":{}}}],["license",{"_index":486,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":462,"title":{},"body":{"index.html":{}}}],["logger",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["logger(req",{"_index":424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matching",{"_index":32,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matchroles",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matchroles(roles",{"_index":342,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["memory",{"_index":199,"title":{},"body":{"controllers/CatsController.html":{}}}],["message",{"_index":292,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["metadata",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":358,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["miscellaneous",{"_index":419,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":461,"title":{},"body":{"index.html":{}}}],["mode",{"_index":451,"title":{},"body":{"index.html":{}}}],["models/account/account.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["models/admin/admin.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["models/cats/cats.controller",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["models/cats/cats.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":475,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":481,"title":{},"body":{"index.html":{}}}],["name",{"_index":17,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":201,"title":{},"body":{"controllers/CatsController.html":{},"index.html":{}}}],["nestframework",{"_index":485,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":156,"title":{},"body":{"controllers/CatsController.html":{},"classes/CreateCatDto.html":{},"dependencies.html":{}}}],["new",{"_index":189,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextfunction",{"_index":427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["node.js",{"_index":431,"title":{},"body":{"index.html":{}}}],["npm",{"_index":444,"title":{},"body":{"index.html":{}}}],["number",{"_index":91,"title":{},"body":{"interfaces/Cat.html":{},"classes/CreateCatDto.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":369,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["open",{"_index":463,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AccountController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["overview",{"_index":490,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":401,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{}}}],["param",{"_index":144,"title":{},"body":{"controllers/CatsController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"controllers/AccountController.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":125,"title":{},"body":{"controllers/CatsController.html":{}}}],["parseintpipe",{"_index":148,"title":{},"body":{"controllers/CatsController.html":{}}}],["path",{"_index":321,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["pipetransform",{"_index":364,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":366,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":370,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":473,"title":{},"body":{"index.html":{}}}],["possible",{"_index":197,"title":{},"body":{"controllers/CatsController.html":{}}}],["post",{"_index":138,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefer",{"_index":190,"title":{},"body":{"controllers/CatsController.html":{}}}],["prefix",{"_index":93,"title":{},"body":{"controllers/CatsController.html":{}}}],["private",{"_index":220,"title":{},"body":{"injectables/CatsService.html":{},"injectables/HttpService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":453,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":430,"title":{},"body":{"index.html":{}}}],["project",{"_index":464,"title":{},"body":{"index.html":{}}}],["promise",{"_index":118,"title":{},"body":{"controllers/CatsController.html":{}}}],["properties",{"_index":88,"title":{"properties.html":{}},"body":{"interfaces/Cat.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"injectables/HttpService.html":{},"properties.html":{}}}],["provide",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["purpose",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["purposes",{"_index":252,"title":{},"body":{"modules/CommonModule.html":{}}}],["query",{"_index":143,"title":{},"body":{"controllers/CatsController.html":{}}}],["re",{"_index":266,"title":{},"body":{"modules/CoreModule.html":{}}}],["read",{"_index":474,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/HttpService.html":{}}}],["receive",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect",{"_index":142,"title":{},"body":{"controllers/CatsController.html":{}}}],["redirect('https://docs.nestjs.com",{"_index":180,"title":{},"body":{"controllers/CatsController.html":{}}}],["reduces",{"_index":198,"title":{},"body":{"controllers/CatsController.html":{}}}],["reflect",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":334,"title":{},"body":{"guards/RolesGuard.html":{}}}],["repository",{"_index":442,"title":{},"body":{"index.html":{}}}],["req",{"_index":139,"title":{},"body":{"controllers/CatsController.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":116,"title":{},"body":{"controllers/CatsController.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["request.url",{"_index":322,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":351,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requests",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["requires",{"_index":308,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res",{"_index":425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["response",{"_index":305,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/functions.html":{}}}],["response.status(status).json",{"_index":317,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["results",{"_index":31,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":30,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{}}}],["reuse",{"_index":203,"title":{},"body":{"controllers/CatsController.html":{}}}],["rimraf",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":161,"title":{},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":173,"title":{},"body":{"controllers/CatsController.html":{}}}],["roles.includes(role",{"_index":345,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles2",{"_index":343,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["roles2.some((role",{"_index":344,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":159,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/CatsController.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["run",{"_index":448,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":204,"title":{},"body":{"controllers/CatsController.html":{}}}],["scalable",{"_index":435,"title":{},"body":{"index.html":{}}}],["server",{"_index":436,"title":{},"body":{"index.html":{}}}],["service.provider.ts",{"_index":325,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["service.provider.ts:6",{"_index":328,"title":{},"body":{"injectables/HttpService.html":{}}}],["set",{"_index":267,"title":{},"body":{"modules/CoreModule.html":{}}}],["setmetadata('roles",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["several",{"_index":218,"title":{},"body":{"modules/CatsModule.html":{}}}],["share",{"_index":215,"title":{},"body":{"modules/CatsModule.html":{}}}],["side",{"_index":437,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/CoreModule.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["specific",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/CatsController.html":{}}}],["sponsors",{"_index":467,"title":{},"body":{"index.html":{}}}],["src/.../logger.middlewares.ts",{"_index":422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.guard.ts",{"_index":423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/decorators/metadata/user",{"_index":386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/exceptions/forbidden.exception.ts",{"_index":286,"title":{},"body":{"classes/ForbiddenException.html":{},"coverage.html":{}}}],["src/common/exceptions/forbidden.exception.ts:3",{"_index":291,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["src/common/exceptions/http",{"_index":296,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/guards/roles.guard.ts",{"_index":331,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/guards/roles.guard.ts:12",{"_index":338,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/guards/roles.guard.ts:9",{"_index":335,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/middlewares/logger.middlewares.ts",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/pipes/validation.pipe.ts",{"_index":353,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validation.pipe.ts:14",{"_index":362,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validation.pipe.ts:24",{"_index":357,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/main.ts",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/account/account.controller.ts",{"_index":6,"title":{},"body":{"controllers/AccountController.html":{},"coverage.html":{}}}],["src/models/account/account.controller.ts:6",{"_index":15,"title":{},"body":{"controllers/AccountController.html":{}}}],["src/models/admin/admin.controller.ts",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/models/admin/admin.controller.ts:6",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/models/cats/cats.controller.ts",{"_index":92,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/models/cats/cats.controller.ts:36",{"_index":109,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.controller.ts:42",{"_index":113,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.controller.ts:47",{"_index":117,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.controller.ts:52",{"_index":120,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.controller.ts:58",{"_index":129,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.controller.ts:66",{"_index":124,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.controller.ts:73",{"_index":133,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.controller.ts:78",{"_index":136,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/models/cats/cats.module.ts",{"_index":211,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/models/cats/cats.service.ts",{"_index":219,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/models/cats/cats.service.ts:10",{"_index":222,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/models/cats/cats.service.ts:14",{"_index":226,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/models/cats/cats.service.ts:18",{"_index":228,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/models/cats/cats.service.ts:22",{"_index":225,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/models/cats/cats.service.ts:8",{"_index":231,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/models/cats/dto/create",{"_index":275,"title":{},"body":{"classes/CreateCatDto.html":{},"coverage.html":{}}}],["src/models/cats/interfaces/cat.interface.ts",{"_index":87,"title":{},"body":{"interfaces/Cat.html":{},"coverage.html":{}}}],["src/models/common/common.module.ts",{"_index":246,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/models/common/common.service.ts",{"_index":258,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/models/core/core.module.ts",{"_index":263,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/providers/http",{"_index":324,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["start",{"_index":449,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":452,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":454,"title":{},"body":{"index.html":{}}}],["started",{"_index":429,"title":{"index.html":{}},"body":{}}],["starter",{"_index":441,"title":{},"body":{"index.html":{}}}],["statements",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":315,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":318,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":477,"title":{},"body":{"index.html":{}}}],["string",{"_index":11,"title":{},"body":{"controllers/AccountController.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["super(message",{"_index":294,"title":{},"body":{"classes/ForbiddenException.html":{}}}],["support",{"_index":468,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":488,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":309,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{}}}],["table",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":457,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":460,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":459,"title":{},"body":{"index.html":{}}}],["tests",{"_index":456,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":466,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":253,"title":{},"body":{"modules/CommonModule.html":{},"modules/CoreModule.html":{}}}],["this.appservice.gethello",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["this.cats",{"_index":234,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.find((cat",{"_index":235,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.findindex((cat",{"_index":238,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.push(cat",{"_index":233,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.cats.splice(index",{"_index":239,"title":{},"body":{"injectables/CatsService.html":{}}}],["this.catservice.create(createcatdto",{"_index":171,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.delete(id",{"_index":175,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.findall",{"_index":177,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.catservice.findone(name",{"_index":207,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.reflector.get('roles",{"_index":346,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.tovalidate(metatype",{"_index":368,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["throw",{"_index":188,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ValidationPipe.html":{}}}],["throwexception",{"_index":102,"title":{},"body":{"controllers/CatsController.html":{}}}],["timestamp",{"_index":319,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["touch",{"_index":478,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":354,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":356,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":355,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":359,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":367,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":348,"title":{},"body":{"guards/RolesGuard.html":{}}}],["twitter",{"_index":484,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"controllers/AccountController.html":{},"interfaces/Cat.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateCatDto.html":{},"classes/ForbiddenException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/HttpService.html":{},"guards/RolesGuard.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":378,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.decorator",{"_index":163,"title":{},"body":{"controllers/CatsController.html":{}}}],["types.decorator.ts",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types.includes(metatype",{"_index":380,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":440,"title":{},"body":{"index.html":{}}}],["ui",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":360,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["unit",{"_index":455,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":110,"title":{},"body":{"controllers/CatsController.html":{},"injectables/ValidationPipe.html":{}}}],["unlicensed",{"_index":496,"title":{},"body":{"properties.html":{}}}],["url",{"_index":131,"title":{},"body":{"controllers/CatsController.html":{}}}],["usage",{"_index":200,"title":{},"body":{"controllers/CatsController.html":{}}}],["useclass",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["usefilters",{"_index":147,"title":{},"body":{"controllers/CatsController.html":{}}}],["usefilters(new",{"_index":185,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards",{"_index":149,"title":{},"body":{"controllers/CatsController.html":{}}}],["useguards(rolesguard",{"_index":166,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipe",{"_index":103,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipe(@param('name",{"_index":206,"title":{},"body":{"controllers/CatsController.html":{}}}],["usepipe(name",{"_index":134,"title":{},"body":{"controllers/CatsController.html":{}}}],["user",{"_index":350,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.roles",{"_index":352,"title":{},"body":{"guards/RolesGuard.html":{}}}],["using",{"_index":193,"title":{},"body":{"controllers/CatsController.html":{}}}],["validate",{"_index":365,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":373,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":73,"title":{"injectables/ValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":285,"title":{},"body":{"classes/CreateCatDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":230,"title":{},"body":{"injectables/CatsService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":499,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":130,"title":{},"body":{"controllers/CatsController.html":{},"properties.html":{}}}],["void",{"_index":223,"title":{},"body":{"injectables/CatsService.html":{},"classes/HttpExceptionFilter.html":{}}}],["want",{"_index":214,"title":{},"body":{"modules/CatsModule.html":{},"modules/CoreModule.html":{}}}],["watch",{"_index":450,"title":{},"body":{"index.html":{}}}],["website",{"_index":482,"title":{},"body":{"index.html":{}}}],["well",{"_index":249,"title":{},"body":{"modules/CommonModule.html":{}}}],["world",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["xxx",{"_index":495,"title":{},"body":{"properties.html":{}}}],["you'd",{"_index":471,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AccountController.html":{"url":"controllers/AccountController.html","title":"controller - AccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/account/account.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInfo\n                        \n                    \n                \n            \n            \n                \ngetInfo(account: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/models/account/account.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HostParam } from '@nestjs/common';\n\n@Controller({ host: ':account.example.com' })\nexport class AccountController {\n  @Get()\n  getInfo(@HostParam('account') account: string) {\n    return account;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/admin/admin.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/models/admin/admin.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller({ host: 'admin.example.com' })\nexport class AdminController {\n  @Get()\n  index(): string {\n    return 'Admin page';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /***\n * A controller's purpose is to receive specific requests for the application\n */\n\nimport { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                        \n                            AdminController\n                        \n                        \n                            AccountController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsController } from './models/cats/cats.controller';\nimport { AdminController } from './models/admin/admin.controller';\nimport { AccountController } from './models/account/account.controller';\nimport { CatsModule } from './models/cats/cats.module';\nimport { APP_PIPE } from '@nestjs/core';\nimport { ValidationPipe } from './common/pipes/validation.pipe';\n\n@Module({\n  imports: [CatsModule],\n  controllers: [CatsController, AdminController, AccountController],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: ValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cat.html":{"url":"interfaces/Cat.html","title":"interface - Cat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/cats/interfaces/cat.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            breed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        breed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        breed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Cat {\n  name: string;\n  age: number;\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findCat\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                getDocs\n                            \n                            \n                                    Async\n                                throwException\n                            \n                            \n                                    Async\n                                usePipe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCatDto: CreateCatDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Header('Cache-Control', 'no-cache')@HttpCode(HttpStatus.NO_CONTENT)@Post()\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCatDto\n                                    \n                                                CreateCatDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete/:id')@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findCat\n                        \n                    \n                \n            \n            \n                \nfindCat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('cat_*')\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseFilters(new HttpExceptionFilter())\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDocs\n                        \n                    \n                \n            \n            \n                \ngetDocs(version: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('docs')@Redirect('https://docs.nestjs.com/', 302)\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { url: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        throwException\n                        \n                    \n                \n            \n            \n                \n                    \n                    throwException()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('exp')\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        usePipe\n                        \n                    \n                \n            \n            \n                \n                    \n                    usePipe(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pipe/:name')\n                \n            \n\n            \n                \n                    Defined in src/models/cats/cats.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpCode,\n  Post,\n  Req,\n  Header,\n  HttpStatus,\n  Redirect,\n  Query,\n  Param,\n  Body,\n  ForbiddenException,\n  UseFilters,\n  ParseIntPipe,\n  UseGuards,\n  Delete,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { CatsService } from './cats.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { HttpExceptionFilter } from '../../common/exceptions/http-exception.filter';\nimport { RolesGuard } from '../../common/guards/roles.guard';\nimport { Roles } from '../../common/decorators/metadata/user-types.decorator';\n\n@ApiTags('cats')\n@Controller('cats')\n@UseGuards(RolesGuard)\nexport class CatsController {\n  constructor(private catService: CatsService) {}\n\n  @Header('Cache-Control', 'no-cache')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Post()\n  async create(@Body() createCatDto: CreateCatDto) {\n    return this.catService.create(createCatDto);\n  }\n\n  @Delete('delete/:id')\n  @Roles('admin')\n  async delete(@Param('id') id: string) {\n    return this.catService.delete(id);\n  }\n\n  @Get()\n  async findAll(@Req() request: Request): Promise {\n    return this.catService.findAll();\n  }\n\n  @Get('cat_*')\n  findCat(): string {\n    return 'This action returns a specific cat';\n  }\n\n  @Get('docs')\n  @Redirect('https://docs.nestjs.com/', 302)\n  getDocs(@Query('version') version: string) {\n    if (version && version === '5') {\n      return { url: 'https://docs.nestjs.com/v5/' };\n    }\n  }\n\n  @Get(':id')\n  @UseFilters(new HttpExceptionFilter())\n  async findOne(@Param() params) {\n    console.log(params.id);\n    throw new ForbiddenException();\n    //  Prefer applying filters by using classes instead of instances when possible. It reduces memory usage since Nest can easily reuse instances of the same class across your entire module.\n  }\n\n  @Get('exp')\n  async throwException() {\n    throw new ForbiddenException();\n  }\n\n  @Get('pipe/:name')\n  async usePipe(@Param('name', ParseIntPipe) name: string) {\n    return this.catService.findOne(name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CatsModule_exports\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  // we want to share an instance of the CatsService between several other modules\n  exports: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(cat: Cat)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cats/cats.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cat\n                                    \n                                                Cat\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cats/cats.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cat\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/models/cats/cats.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Cat[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cats/cats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cat\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cat[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/models/cats/cats.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: Cat[] = [];\n\n  create(cat: Cat) {\n    this.cats.push(cat);\n  }\n\n  findAll(): Cat[] {\n    return this.cats;\n  }\n\n  findOne(name: string): Cat {\n    return this.cats.find((cat) => cat.name === name);\n  }\n\n  delete(name: string): Cat{\n    const index = this.cats.findIndex((cat) => cat.name === name);\n    return this.cats.splice(index, 1)[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nCommonModule \n\nCommonModule \n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule  -->\n\nCommonModule->CommonModule \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\n@Module({\n  exports: [CommonModule],\n  providers: [CommonService],\n})\nexport class CommonModule {\n  //A module class can inject providers as well (e.g., for configuration purposes):\n  //However, module classes themselves cannot be injected as providers due to circular dependency .\n  constructor(private readonly commonService: CommonService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/common/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CommonService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCommonModule->CoreModule\n\n\n\n\n\nCommonModule \n\nCommonModule \n\nCommonModule  -->\n\nCoreModule->CommonModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { CommonModule } from '../common/common.module';\n\n// re-export modules that they import\n\n// However, module classes themselves cannot be injected as providers due to circular dependency .\n\n// When you want to provide a set of providers which should be available everywhere out-of-the-box (e.g., helpers, database connections, etc.),\n@Global()\n@Module({\n  imports: [CommonModule],\n  exports: [CommonModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCatDto.html":{"url":"classes/CreateCatDto.html","title":"class - CreateCatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/cats/dto/create-cat.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                breed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/cats/dto/create-cat.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        breed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/cats/dto/create-cat.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/cats/dto/create-cat.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsString } from 'class-validator';\n\nexport class CreateCatDto {\n  @ApiProperty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsInt()\n  age: number;\n\n  @ApiProperty()\n  @IsString()\n  breed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenException.html":{"url":"classes/ForbiddenException.html","title":"class - ForbiddenException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/forbidden.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/forbidden.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ForbiddenException extends HttpException {\n  constructor(message = 'Forbidden') {\n    super(message, HttpStatus.FORBIDDEN);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/http-exception.filter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n// All exception filters should implement the generic ExceptionFilter interface. This requires you to provide the catch(exception: T, host: ArgumentsHost)\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status = exception.getStatus();\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/http-service.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                httpClient\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject('HTTP_OPTIONS')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/providers/http-service.provider.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@nestjs/common';\n\n@Injectable()\nexport class HttpService {\n  @Inject('HTTP_OPTIONS')\n  private readonly httpClient: T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/roles.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/roles.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nfunction matchRoles(roles: string[], roles2: any) {\n  return roles2.some((role) => roles.includes(role));\n}\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    return matchRoles(roles, user.roles);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  BadRequestException,\n  Injectable,\n  PipeTransform,\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype && !this.toValidate(metatype)) return value;\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException(`Validation failed`);\n    }\n    return value;\n  }\n\n  private toValidate(metatype: Function): boolean {\n    const types: Function[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/decorators/metadata/user-types.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/exceptions/forbidden.exception.ts\n            \n            class\n            ForbiddenException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/exceptions/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/guards/roles.guard.ts\n            \n            function\n            matchRoles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/middlewares/logger.middlewares.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/account/account.controller.ts\n            \n            controller\n            AccountController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/cats/dto/create-cat.dto.ts\n            \n            class\n            CreateCatDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/cats/interfaces/cat.interface.ts\n            \n            interface\n            Cat\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/common/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/http-service.provider.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : 8.3.1\n        \n            @nestjs/core : 8.3.1\n        \n            @nestjs/platform-express : 8.3.1\n        \n            @nestjs/swagger : 5.2.0\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.13.2\n        \n            helmet : 5.0.2\n        \n            reflect-metadata : 0.1.13\n        \n            rimraf : 3.0.2\n        \n            rxjs : 7.5.4\n        \n            swagger-ui-express : 4.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            logger   (src/.../logger.middlewares.ts)\n                        \n                        \n                            matchRoles   (src/.../roles.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/middlewares/logger.middlewares.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/guards/roles.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        matchRoles\n                        \n                    \n                \n            \n            \n                \nmatchRoles(roles, roles2: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roles2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CatsModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CoreModule\n\n\n\n\nCatsModule\n\nCatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\nCommonModule \n\nCommonModule \n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule  -->\n\nCommonModule->CommonModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCommonModule->CoreModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\nCommonModule  -->\n\nCoreModule->CommonModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : xxx\n        \n            License : UNLICENSED\n        \n            Author : Eyal Borovsky\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../user-types.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/metadata/user-types.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
